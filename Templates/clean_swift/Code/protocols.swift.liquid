//
//  {{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright © {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation

/// {{ module_info.name }} DataProvider Interface
protocol {{ module_info.name }}DataProviderInput {
    func getSomething(completion: @escaping ({{ module_info.name }}Model?, String?) -> Void)
}

/// {{ module_info.name }} Router Interface
protocol {{ module_info.name }}RouterProtocol {
    func routeTo/*AnyViewController*/(fromVc: {{ module_info.name }}ViewController)
}

/// {{ module_info.name }} ViewController Interface
protocol {{ module_info.name }}ViewControllerInput: class {

    // TODO: - Изменить название Use case
    func displaySomething(viewModel: {{ module_info.name }}.Something.ViewModel)
}

/// {{ module_info.name }} View Interface
protocol {{ module_info.name }}ViewInput: class {
    func displayNoResult()
    func displayError(error: String)
    func displayConnectionError()
    func hideConnectionError()
    func showProgress()
    func hideProgress()
    func updateTableViewData(delegate: UITableViewDelegate, dataSource: UITableViewDataSource)
}

/// {{ module_info.name }} Interactor Interface
protocol {{ module_info.name }}InteractorInput {
    func doSomething(request: {{ module_info.name }}.Something.Request)
}

/// {{ module_info.name }} Presenter Interface
protocol {{ module_info.name }}PresenterInput: class {
    func presentSomething(response: {{ module_info.name }}.Something.Response)
}






